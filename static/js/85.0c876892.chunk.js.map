{"version":3,"file":"static/js/85.0c876892.chunk.js","mappings":"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","sources":["webpack://walet/./src/components/RegistrationForm/RegistrationForm.module.scss?6285","validations/RegistrationSchema.js","components/RegistrationForm/RegistrationForm.jsx","webpack://walet/./src/pages/RegistrationPage/RegistrationPage.module.scss?bbbb","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"RegistrationForm\":\"RegistrationForm_RegistrationForm__GJnMI\",\"RegistrationForm__alert\":\"RegistrationForm_RegistrationForm__alert__-HyKs\",\"RegistrationForm__icon\":\"RegistrationForm_RegistrationForm__icon__-u9hM\",\"RegistrationForm__passwordStrengthBar\":\"RegistrationForm_RegistrationForm__passwordStrengthBar__sVZfv\"};","import * as yup from 'yup';\n\nconst RegistrationSchema = yup.object().shape({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min('6', 'Password must be at least 6 characters')\n    .max('12', 'Password must be at most 12 characters'),\n  confirmPassword: yup\n    .string()\n    .required('Confirm Password is required')\n    .oneOf([yup.ref('password'), null], 'Passwords must match'),\n  username: yup.string().required('First Name is required'),\n});\n\nexport default RegistrationSchema;\n","import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from 'redux/auth/operations';\nimport { selectError } from 'redux/auth/selectors';\nimport Alert from '@mui/material/Alert';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockIcon from '@mui/icons-material/Lock';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport Logo from 'components/Logo/Logo';\nimport Buttons from 'components/Buttons/Buttons';\nimport styles from './RegistrationForm.module.scss';\nimport RegistrationSchema from 'validations/RegistrationSchema';\nimport { useFormik } from 'formik';\n\nconst RegistrationForm = props => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const navigate = useNavigate();\n  const { handleBlur } = props;\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      username: '',\n      confirmPassword: '',\n    },\n\n    validationSchema: RegistrationSchema,\n    onSubmit: values => {\n      dispatch(\n        registerUser({\n          email: formik.values.email,\n          password: formik.values.password,\n          username: formik.values.username,\n        })\n      );\n    },\n  });\n\n  return (\n    <form className={styles.RegistrationForm} onSubmit={formik.handleSubmit}>\n      <Logo />\n\n      {error.length > 0 && (\n        <Alert severity=\"error\" className={styles.RegistrationForm__alert}>\n          {error}\n        </Alert>\n      )}\n\n      <div style={{ marginTop: '30px' }}>\n        <TextField\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={handleBlur}\n          helperText={formik.touched.email ? formik.errors.email : ' '}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailIcon className={styles.RegistrationForm__icon} />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          helperText={formik.touched.password ? formik.errors.password : ' '}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon className={styles.RegistrationForm__icon} />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          name=\"confirmPassword\"\n          type=\"password\"\n          placeholder=\"Confirm password\"\n          value={formik.values.confirmPassword}\n          onChange={formik.handleChange}\n          onBlur={handleBlur}\n          helperText={\n            formik.touched.confirmPassword ? formik.errors.confirmPassword : ''\n          }\n          error={\n            formik.touched.confirmPassword &&\n            Boolean(formik.errors.confirmPassword)\n          }\n          sx={{ marginBottom: '2px' }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon className={styles.RegistrationForm__icon} />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <PasswordStrengthBar\n          password={formik.values.confirmPassword}\n          minLength={6}\n          shortScoreWord={false}\n          barColors={['#E5F1EF', '#24CCA7', '#24CCA7', '#24CCA7', '#24CCA7']}\n          className={styles.RegistrationForm__passwordStrengthBar}\n          scoreWords={false}\n        />\n        <TextField\n          name=\"username\"\n          placeholder=\"First name\"\n          value={formik.values.username}\n          onChange={formik.handleChange}\n          onBlur={handleBlur}\n          helperText={formik.touched.username ? formik.errors.username : ' '}\n          error={formik.touched.username && Boolean(formik.errors.username)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <AccountBoxIcon className={styles.RegistrationForm__icon} />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n\n      <Buttons\n        firstButtonType=\"submit\"\n        firstButtonText=\"Register\"\n        secondButtonText=\"Log in\"\n        secondButtonHandler={() => navigate('/login')}\n      />\n    </form>\n  );\n};\n\nexport default RegistrationForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"RegistrationPage\":\"RegistrationPage_RegistrationPage__eHvTr\",\"RegistrationPage__leftSide\":\"RegistrationPage_RegistrationPage__leftSide__zi+6G\",\"RegistrationPage__rightSide\":\"RegistrationPage_RegistrationPage__rightSide__HZuqi\",\"RegistrationPage__img\":\"RegistrationPage_RegistrationPage__img__0lI9m\",\"RegistrationPage__title\":\"RegistrationPage_RegistrationPage__title__Ym76a\",\"RegistrationPage__pinkEllipse\":\"RegistrationPage_RegistrationPage__pinkEllipse__Kc0Pl\",\"RegistrationPage__pinkEllipseImg\":\"RegistrationPage_RegistrationPage__pinkEllipseImg__Er+M-\",\"RegistrationPage__containerForEllipse\":\"RegistrationPage_RegistrationPage__containerForEllipse__T5MJw\",\"RegistrationPage__registrationForm\":\"RegistrationPage_RegistrationPage__registrationForm__ihgYk\"};","import Media from 'react-media';\nimport { breakpoints } from 'styles/breakpoints.js';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { clearTransaction } from 'redux/transaction/slice.js';\nimport RegistrationForm from '../../components/RegistrationForm/RegistrationForm.jsx';\nimport styles from './RegistrationPage.module.scss';\nimport registrationImg from 'assets/images/desktop/registration-page-image.png';\nimport ellipse2 from 'assets/images/desktop/Ellipse2.png';\nimport Footer from 'components/Footer/Footer.jsx';\nimport 'index.css';\n\nconst RegistrationPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(clearTransaction());\n  });\n  return (\n    <>\n      <Helmet title=\"Registration\">\n        <meta\n          name=\"description\"\n          content=\"Registration page of Wallet finance App\"\n        />\n      </Helmet>\n      <div className=\"container_for_reg_and_log_page\">\n        <div className={styles.RegistrationPage}>\n          <Media\n            query={breakpoints.tablet}\n            render={() => (\n              <>\n                <div className={styles.RegistrationPage__leftSide}>\n                  <img\n                    className={styles.RegistrationPage__img}\n                    src={registrationImg}\n                    alt=\"cellphone and a girl\"\n                    width=\"452px\"\n                    height=\"413px\"\n                  />\n                  <h1 className={styles.RegistrationPage__title}>\n                    Finance App\n                  </h1>\n                </div>\n              </>\n            )}\n          />\n\n          <Media\n            query={breakpoints.desktop}\n            render={() => (\n              <>\n                <div className={styles.RegistrationPage__pinkEllipse}>\n                  <img\n                    className={styles.RegistrationPage__pinkEllipseImg}\n                    src={ellipse2}\n                    alt=\"pink ellipse\"\n                  />\n                </div>\n                <div className={styles.RegistrationPage__leftSide}>\n                  <img\n                    className={styles.RegistrationPage__img}\n                    src={registrationImg}\n                    alt=\"cellphone and a girl\"\n                    width=\"452px\"\n                    height=\"413px\"\n                  />\n\n                  <h1 className={styles.RegistrationPage__title}>\n                    Finance App\n                  </h1>\n                </div>\n              </>\n            )}\n          />\n\n          <div className={styles.RegistrationPage__rightSide}>\n            <RegistrationForm\n              className={styles.RegistrationPage__registrationForm}\n            />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["yup","shape","email","required","password","min","max","confirmPassword","oneOf","username","props","dispatch","useDispatch","error","useSelector","selectError","navigate","useNavigate","handleBlur","formik","useFormik","initialValues","validationSchema","RegistrationSchema","onSubmit","values","registerUser","className","styles","handleSubmit","Logo","length","Alert","severity","style","marginTop","TextField","name","type","placeholder","value","onChange","handleChange","onBlur","helperText","touched","errors","Boolean","InputProps","startAdornment","InputAdornment","position","Email","Lock","sx","marginBottom","minLength","shortScoreWord","barColors","scoreWords","AccountBox","Buttons","firstButtonType","firstButtonText","secondButtonText","secondButtonHandler","useEffect","clearTransaction","Helmet","title","content","query","breakpoints","render","src","registrationImg","alt","width","height","ellipse2","Footer"],"sourceRoot":""}